<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ld.gg.dao.Summoner_dao">

	<select id="getRankLoadingData" resultType="summoner_rank">
		SELECT DISTINCT
		sr.summoner_name as summoner_name,
		si.profile_icon_id as
		profile_icon_id, si.s_level as s_level, LOWER(sr.tier) as
		tier,
		sr.division as division,
		sr.wins as wins, sr.losses as losses, sr.lp as
		lp,
		round((sr.wins/(si.games))*100,2) as
		winrate
		FROM summoner_rank sr
		INNER
		JOIN summoner_info si ON sr.summoner_name = si.summoner_name
		WHERE
		sr.queue = 'RANKED_SOLO_5x5' AND LOWER(sr.tier) IN ('challenger',
		'grandmaster', 'master')
		ORDER BY sr.lp DESC;
	</select>

	<select id="getRankSoloData" resultType="summoner_rank">
		SELECT sr.summoner_name,
		si.profile_icon_id, si.s_level, LOWER(sr.tier) as tier, sr.division,
		sr.wins, sr.losses, sr.lp, round((sr.wins/(si.games))*100,2) as
		winrate
		FROM summoner_rank sr
		INNER JOIN summoner_info si ON
		sr.summoner_name = si.summoner_name
		WHERE sr.queue = 'RANKED_SOLO_5x5'
		AND LOWER(sr.tier) IN ('challenger',
		'grandmaster', 'master')
		ORDER BY
		sr.lp DESC;
	</select>

	<select id="getRankFlexData" resultType="summoner_rank">
		SELECT sr.summoner_name,
		si.profile_icon_id, si.s_level, LOWER(sr.tier) as tier, sr.division,
		sr.wins, sr.losses, sr.lp, round((sr.wins/(si.games))*100,2) as
		winrate
		FROM summoner_rank sr
		INNER JOIN summoner_info si ON
		sr.summoner_name = si.summoner_name
		WHERE sr.queue = 'RANKED_FLEX_5x5'
		AND LOWER(sr.tier) IN ('challenger',
		'grandmaster', 'master')
		ORDER BY
		sr.lp DESC;
	</select>

	<select id="getRankLevelData" resultType="summoner">
		SELECT
		sr.summoner_name,
		si.profile_icon_id, si.s_level, LOWER(sr.tier) as
		tier, sr.division,
		sr.wins, sr.losses, sr.lp,
		round((sr.wins/(si.games))*100,2) as
		winrate
		FROM summoner_rank sr
		INNER
		JOIN summoner_info si ON
		sr.summoner_name = si.summoner_name
		WHERE
		sr.queue = 'RANKED_SOLO_5x5'
		ORDER BY
		si.s_level DESC;
	</select>

	<select id="get_summoner_info" resultType="summoner">
		SELECT DISTINCT
		summoner_name, s_level, profile_icon_id, games, LOWER(tier)
		as tier,
		wins, losses, lp, ranking, MIN(revision_date) as
		revision_date,
		tier_int
		FROM summoner_info
		WHERE summoner_name = #{summoner_name}
		GROUP
		BY summoner_name, s_level, profile_icon_id, games, LOWER(tier), wins,
		losses, lp, ranking, tier_int;
	</select>

	<select id="get_renewal_info" resultType="summoner">
		SELECT * FROM
		SUMMONER_INFO
		WHERE summoner_name = ${summoner_name}
	</select>

	<select id="get_summoner_record" resultType="record">
		SELECT
		match_id,
		win,
		champ_name,
		champ_level,
		team_id,
		main_rune,
		sub_rune,
		spell1,
		spell2,
		kda,
		kills,
		deaths,
		assists,
		cs,
		sight_points,
		red_wards_placed,
		ROUND(team_champion_kills / kills, 2) AS kill_involve,
		item1,
		item2,
		item3,
		item4,
		item5,
		item6,
		item7,
		t.summoner_name,
		t.champion_name AS
		player_champion_name,
		team_id,
		team_champion_kills
		FROM
		RECORD
		JOIN
		(SELECT
		summoner_name,
		champion_name
		FROM
		RECORD
		WHERE
		summoner_name =
		#{summoner_name}) AS t
		ON
		RECORD.match_id = t.match_id;
	</select>

	<select id="get_champ_record" resultType="champ_record">
		SELECT
		(SELECT COUNT(*) FROM record WHERE summoner_name = #{summoner_name} AND win = 1) AS
		wins,
		(SELECT COUNT(*) FROM record WHERE summoner_name = #{summoner_name} AND win = 0) AS
		losses,
		champ_name,
		COUNT(*) AS games,
		(SUM(CASE WHEN win = 1 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS winrate,
		(SUM(kills) + SUM(assists)) / SUM(deaths) AS KDA,
		SUM(kills) AS kills,
		SUM(deaths) AS deaths,
		SUM(assists) AS assists,
		SUM(CS) AS CS,
		ROUND(SUM(CS) / COUNT(*), 2) AS CS_per_minute
		FROM
		record
		WHERE
		summoner_name = #{summoner_name}
		GROUP BY
		champ_name;
	</select>

	<select id="getChampSolo">
		SELECT
		(SELECT COUNT(*) FROM record WHERE summoner_name = #{summoner_name} AND win = 1) AS
		wins,
		(SELECT COUNT(*) FROM record WHERE summoner_name = #{summoner_name} AND win = 0) AS
		losses,
		champ_name,
		COUNT(*) AS games,
		(SUM(CASE WHEN win = 1 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS winrate,
		(SUM(kills) + SUM(assists)) / SUM(deaths) AS KDA,
		SUM(kills) AS kills,
		SUM(deaths) AS deaths,
		SUM(assists) AS assists,
		SUM(CS) AS CS,
		ROUND(SUM(CS) / COUNT(*), 2) AS CS_per_minute
		FROM
		record
		WHERE
		summoner_name = #{summoner_name}
		GROUP BY
		champ_name;
	</select>

	<select id="getChampFlex">
		SELECT
		(SELECT COUNT(*) FROM record WHERE summoner_name = #{summoner_name} AND win = 1) AS
		wins,
		(SELECT COUNT(*) FROM record WHERE summoner_name = #{summoner_name} AND win = 0) AS
		losses,
		champ_name,
		COUNT(*) AS games,
		(SUM(CASE WHEN win = 1 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS winrate,
		(SUM(kills) + SUM(assists)) / SUM(deaths) AS KDA,
		SUM(kills) AS kills,
		SUM(deaths) AS deaths,
		SUM(assists) AS assists,
		SUM(CS) AS CS,
		ROUND(SUM(CS) / COUNT(*), 2) AS CS_per_minute
		FROM
		record
		WHERE
		summoner_name = #{summoner_name}
		GROUP BY
		champ_name;
	</select>

	<select id="getChampClassic">
		SELECT
		(SELECT COUNT(*) FROM record WHERE summoner_name = #{summoner_name} AND win = 1) AS
		wins,
		(SELECT COUNT(*) FROM record WHERE summoner_name = #{summoner_name} AND win = 0) AS
		losses,
		champ_name,
		COUNT(*) AS games,
		(SUM(CASE WHEN win = 1 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS winrate,
		(SUM(kills) + SUM(assists)) / SUM(deaths) AS KDA,
		SUM(kills) AS kills,
		SUM(deaths) AS deaths,
		SUM(assists) AS assists,
		SUM(CS) AS CS,
		ROUND(SUM(CS) / COUNT(*), 2) AS CS_per_minute
		FROM
		record
		WHERE
		summoner_name = #{summoner_name}
		GROUP BY
		champ_name;
	</select>

	<!-- <select id="get_20games_summary" resultType="recordSummaryMap"> SELECT 
		SUM(CASE WHEN win = 1 THEN 1 ELSE 0 END) AS wins, SUM(CASE WHEN win = 0 THEN 
		1 ELSE 0 END) AS losses, ROUND(SUM(win) / COUNT(*), 2) AS winrate, ROUND(SUM(kda) 
		/ 20, 2) AS avg_kda, MAX(kda) AS top_kda, PERCENTILE_CONT(0.5) WITHIN GROUP 
		(ORDER BY kda) AS mid_kda, MIN(kda) AS low_kda, (SELECT kills FROM RECORD 
		WHERE kda = MAX(kda) AND summoner_name = #{summoner_name} AS kills, (SELECT 
		deaths FROM RECORD WHERE kda = MAX(kda) AND summoner_name = #{summoner_name}) 
		AS deaths, (SELECT assists FROM RECORD WHERE kda = MAX(kda) AND summoner_name 
		= #{summoner_name}) AS assists, pick_position, ROUND((COUNT(*) / 20) * 100, 
		2) AS pick_rate, champion_name, ROUND(SUM(win) / COUNT(*) * 100, 2) AS champ_winrate, 
		SUM(win) AS champ_wins, COUNT(*) - SUM(win) AS champ_losses, ROUND(AVG(kda), 
		2) AS champ_kda, champ_position FROM (SELECT champion_name, pick_position, 
		champ_position, SUM(win) AS win, AVG(kda) AS kda FROM RECORD WHERE summoner_name 
		= #{summoner_name} GROUP BY champion_name, pick_position, champ_position) 
		AS t GROUP BY pick_position, champion_name, champ_position HAVING COUNT(*) 
		> 20 * 0.1; </select> <resultMap id="recordSummaryMap" type="record_info"> 
		<id property="championName" column="champion_name" /> <result property="wins" 
		column="wins" /> <result property="losses" column="losses" /> <result property="winRate" 
		column="winrate" /> <result property="avgKda" column="avg_kda" /> <result 
		property="topKda" column="top_kda" /> <result property="midKda" column="mid_kda" 
		/> <result property="lowKda" column="low_kda" /> <result property="kills" 
		column="kills" /> <result property="deaths" column="deaths" /> <result property="assists" 
		column="assists" /> <result property="pickPosition" column="pick_position" 
		/> <result property="pickRate" column="pick_rate" /> <collection property="championStats" 
		ofType="ChampionStats" javaType="java.util.List"> <result property="championName" 
		column="champion_name" /> <result property="winRate" column="champ_winrate" 
		/> <result property="wins" column="champ_wins" /> <result property="losses" 
		column="champ_losses" /> <result property="avgKda" column="champ_kda" /> 
		<result property="position" column="champ_position" /> </collection> </resultMap> -->

	<select id="get_champ_position_filter"
		resultMap="positionPickRateMap">
		SELECT
		pick_position, COUNT(*) / total_games * 100 AS
		pick_rate
		FROM (
		SELECT summoner_name, pick_position, COUNT(*) AS
		total_games
		FROM RECORD
		WHERE summoner_name = ${summoner_name}
		GROUP BY
		summoner_name, pick_position
		) AS subquery
		GROUP BY pick_position
		ORDER
		BY COUNT(*) DESC
		LIMIT 3
	</select>

	<resultMap id="positionPickRateMap" type="champ_record">
		<result property="pickPosition" column="pick_position" />
		<result property="pickRate" column="pick_rate" />
	</resultMap>

	<select id="get_record_detail" resultType="record">
		SELECT
		r.win,
		r.team_tower_kills,
		r.team_dragon_kills,
		r.team_baron_kills,
		r.team_id,
		r.team_champion_kills,
		SUM(s.deaths) AS team_deaths,
		SUM(s.assists) AS
		team_assists,
		r.champion_name,
		r.champion_level,
		r.spell1,
		r.spell2,
		r.main_rune,
		r.main_rune1,
		r.sub_rune,
		r.kills,
		r.deaths,
		r.assists,
		r.kda,
		r.cs,
		r.red_wards_placed,
		r.dealt_to_champ,
		r.item1,
		r.item2,
		r.item3,
		r.item4,
		r.item5,
		r.item6,
		r.item7,
		si.tier
		FROM
		record r
		JOIN
		summoner_info
		si ON r.summoner_name = si.summoner_name
		JOIN
		record s ON r.team_id =
		s.team_id
		WHERE
		r.match_id = #{matchId}
		GROUP BY
		r.win,
		r.team_tower_kills,
		r.team_dragon_kills,
		r.team_baron_kills,
		r.team_id,
		r.team_champion_kills,
		r.champion_name,
		r.champion_level,
		r.spell1,
		r.spell2,
		r.main_rune,
		r.main_rune1,
		r.sub_rune,
		r.kills,
		r.deaths,
		r.assists,
		r.kda,
		r.cs,
		r.red_wards_placed,
		r.dealt_to_champ,
		r.item1,
		r.item2,
		r.item3,
		r.item4,
		r.item5,
		r.item6,
		r.item7,
		si.tier
	</select>

	<select id="getBuild" resultType="build">
		SELECT
		t.mini_t_time AS
		timestamp,
		t.item_id,
		t.mini_t_skill_slot,
		r.main_rune,
		r.main_rune1,
		r.main_rune2,
		r.main_rune3,
		r.main_rune4,
		r.sub_rune,
		r.sub_rune1,
		r.sub_rune2,
		r.rune_stat1,
		r.rune_stat2,
		r.rune_stat3
		FROM
		time_line_data t
		LEFT JOIN
		record r ON t.match_id = r.match_id AND t.summoner_name =
		r.summoner_name
		WHERE
		t.match_id = #{matchId}
		AND t.summoner_name =
		#{summonerName}
	</select>

	<!-- <select id="getRanking" resultType="recordRanking"> SELECT '본인' AS 
		player_type, self_dealt AS dealt, self_taken AS taken, self_kills AS kills, 
		self_deaths AS deaths, self_assists AS assists, self_red_wards AS red_wards, 
		self_cs AS cs FROM record WHERE match_id = #{matchId} AND summoner_name = 
		#{summonerName} UNION SELECT '팀원' AS player_type, team_dealt1 AS dealt, team_taken1 
		AS taken, team_kills1 AS kills, team_deaths1 AS deaths, team_assists1 AS 
		assists, team_red_wards1 AS red_wards, team_cs1 AS cs FROM record WHERE match_id 
		= #{matchId} AND summoner_name <> #{summonerName} AND team_id = ( SELECT 
		team_id FROM record WHERE match_id = #{matchId} AND summoner_name = #{summonerName} 
		) UNION SELECT '팀원' AS player_type, team_dealt2 AS dealt, team_taken2 AS 
		taken, team_kills2 AS kills, team_deaths2 AS deaths, team_assists2 AS assists, 
		team_red_wards2 AS red_wards, team_cs2 AS cs FROM record WHERE match_id = 
		#{matchId} AND summoner_name <> #{summonerName} AND team_id = ( SELECT team_id 
		FROM record WHERE match_id = #{matchId} AND summoner_name = #{summonerName} 
		) UNION SELECT '팀원' AS player_type, team_dealt3 AS dealt, team_taken3 AS 
		taken, team_kills3 AS kills, team_deaths3 AS deaths, team_assists3 AS assists, 
		team_red_wards3 AS red_wards, team_cs3 AS cs FROM record WHERE match_id = 
		#{matchId} AND summoner_name <> #{summonerName} AND team_id = ( SELECT team_id 
		FROM record WHERE match_id = #{matchId} AND summoner_name = #{summonerName} 
		) UNION SELECT '팀원' AS player_type, team_dealt4 AS dealt, team_taken4 AS 
		taken, team_kills4 AS kills, team_deaths4 AS deaths, team_assists4 AS assists, 
		team_red_wards4 AS red_wards, team_cs4 AS cs FROM record WHERE match_id = 
		#{matchId} AND summoner_name <> #{summonerName} AND team_id = ( SELECT team_id 
		FROM record WHERE match_id = #{matchId} AND summoner_name = #{summonerName} 
		); </select> -->

	<select id="getSummoner" resultType="summoner">
		select DISTINCT summoner_name,
		LOWER(tier) as tier,
		profile_icon_id,
		games,
		wins,
		losses,
		lp,
		round((wins /
		games) * 100,2) as winrate
		from summoner_info
		where summoner_name =
		"8찬이하밥상엎음"
	</select>

	<!-- <select id="getDashBoardKDA" resultType="dashboard"> SELECT COUNT(CASE 
		WHEN win = 1 THEN 1 END) AS wins, COUNT(CASE WHEN win = 0 THEN 1 END) AS 
		losses, SUM(kills) / 20 AS kills_avg, SUM(deaths) / 20 AS deaths_avg, SUM(assists) 
		/ 20 AS assists_avg, SUM(kda) / 20 AS kda_avg FROM record WHERE summoner_name 
		= #{summoner_name} LIMIT 20; </select> -->

</mapper>